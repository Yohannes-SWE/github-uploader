name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio httpx

      - name: Run backend tests
        run: |
          python -c "import main; print('Backend imports successfully')"
          # Add actual tests here when created

      - name: Lint backend
        run: |
          pip install flake8 black==23.3.0
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          black --check .

  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "./client/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Run frontend tests
        run: npm test -- --watchAll=false

      - name: Build frontend
        run: npm run build

      - name: Lint frontend
        run: npm run lint

  trigger-deployment:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Trigger RepoTorpedo Deployment
        env:
          REPOTORPEDO_API_URL: ${{ secrets.REPOTORPEDO_API_URL }}
          REPOTORPEDO_TOKEN: ${{ secrets.REPOTORPEDO_TOKEN }}
          REPOSITORY_URL: ${{ github.server_url }}/${{ github.repository }}
        run: |
          curl -X POST "$REPOTORPEDO_API_URL/api/deploy" \
            -H "Authorization: Bearer $REPOTORPEDO_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "repository": "${{ env.REPOSITORY_URL }}",
              "branch": "${{ github.ref_name }}",
              "commit": "${{ github.sha }}",
              "trigger": "github_workflow"
            }'
